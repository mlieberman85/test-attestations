{
    "_type": "https://in-toto.io/Statement/v0.1",
    "subject": [
        {
            "name": "/nix/store/2ac7jy5m3cvwkc7k8x04r3l55mh9qffx-source",
            "digest": {
                "sha256": "c89be1732b3171b506b833aa7bf4d0dd8e71c8cd80530eabd531d21ceaa6532d"
            }
        }
    ],
    "predicateType": "https://slsa.dev/provenance/v0.2",
    "predicate": {
        "builder": {
            "id": "file:///nix/store/14lypyys4gfcl982rjddxa6jg7msqz9q-bash-5.1-p16/bin/bash"
        },
        "buildType": "https://nixos.org/build/0.1",
        "invocation": {
            "parameters": {
                "args": [
                    "-e",
                    "/nix/store/720ikgx7yaapyb8hvi8lkicjqwzcx3xr-builder.sh"
                ]
            },
            "environment": {
                "SSL_CERT_FILE": "/no-cert-file.crt",
                "buildInputs": "",
                "builder": "/nix/store/14lypyys4gfcl982rjddxa6jg7msqz9q-bash-5.1-p16/bin/bash",
                "configureFlags": "",
                "curlOpts": "",
                "depsBuildBuild": "",
                "depsBuildBuildPropagated": "",
                "depsBuildTarget": "",
                "depsBuildTargetPropagated": "",
                "depsHostHost": "",
                "depsHostHostPropagated": "",
                "depsTargetTarget": "",
                "depsTargetTargetPropagated": "",
                "doCheck": "",
                "doInstallCheck": "",
                "downloadToTemp": "1",
                "executable": "",
                "impureEnvVars": "http_proxy https_proxy ftp_proxy all_proxy no_proxy NIX_CURL_FLAGS NIX_HASHED_MIRRORS NIX_CONNECT_TIMEOUT NIX_MIRRORS_alsa NIX_MIRRORS_apache NIX_MIRRORS_bioc NIX_MIRRORS_bitlbee NIX_MIRRORS_centos NIX_MIRRORS_cpan NIX_MIRRORS_debian NIX_MIRRORS_fedora NIX_MIRRORS_gcc NIX_MIRRORS_gentoo NIX_MIRRORS_gnome NIX_MIRRORS_gnu NIX_MIRRORS_gnupg NIX_MIRRORS_hackage NIX_MIRRORS_hashedMirrors NIX_MIRRORS_ibiblioPubLinux NIX_MIRRORS_imagemagick NIX_MIRRORS_kde NIX_MIRRORS_kernel NIX_MIRRORS_luarocks NIX_MIRRORS_maven NIX_MIRRORS_mozilla NIX_MIRRORS_mysql NIX_MIRRORS_openbsd NIX_MIRRORS_opensuse NIX_MIRRORS_osdn NIX_MIRRORS_postgresql NIX_MIRRORS_pypi NIX_MIRRORS_roy NIX_MIRRORS_sageupstream NIX_MIRRORS_samba NIX_MIRRORS_savannah NIX_MIRRORS_sourceforge NIX_MIRRORS_steamrt NIX_MIRRORS_tcsh NIX_MIRRORS_testpypi NIX_MIRRORS_ubuntu NIX_MIRRORS_xfce NIX_MIRRORS_xorg",
                "mirrorsFile": "/nix/store/329sc60bps6ql9ds0yd81jg165mia0sr-mirrors-list",
                "name": "source",
                "nativeBuildInputs": "/nix/store/d4cgk001fq0lsmfbz1a1dfgwlq4d62c8-curl-7.83.1-dev /nix/store/j9k6xf477871ydqxwzyicqzp1drrfirg-unzip-6.0",
                "nixpkgsVersion": "22.05",
                "out": "/nix/store/2ac7jy5m3cvwkc7k8x04r3l55mh9qffx-source",
                "outputHash": "sha256-yJvhcysxcbUGuDOqe/TQ3Y5xyM2AUw6r1THSHOqmUy0=",
                "outputHashAlgo": "sha256",
                "outputHashMode": "recursive",
                "outputs": "out",
                "patches": "",
                "postFetch": "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/v1.5.2.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" \u0026\u0026 echo *)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n",
                "preferHashedMirrors": "1",
                "preferLocalBuild": "1",
                "propagatedBuildInputs": "",
                "propagatedNativeBuildInputs": "",
                "showURLs": "",
                "stdenv": "/nix/store/lmj98vlk5h0v1x5gzslxjnaj4m58dwxm-stdenv-linux",
                "strictDeps": "",
                "system": "x86_64-linux",
                "urls": "https://github.com/facebook/zstd/archive/v1.5.2.tar.gz"
            }
        },
        "materials": [
            {
                "uri": "file:///nix/store/720ikgx7yaapyb8hvi8lkicjqwzcx3xr-builder.sh",
                "digest": {
                    "sha256": "f376a89dbfda67d35c173d310246ed48d4c400d6175edc6c01a81c7b2aec45ed"
                }
            },
            {
                "uri": "file:///nix/store/3ga8qx6a74j26sy0yyvnqnxp6mva1b1z-stdenv-linux.drv",
                "digest": {
                    "sha256": "f9bc13b9bdaa3cce0106294eeec282b55ca6f4f2d0b2d11e04685a22f7cb5170"
                }
            },
            {
                "uri": "file:///nix/store/dgls6fvghffm7ylv634lqkb2xg4zv86y-mirrors-list.drv",
                "digest": {
                    "sha256": "064051d5923c4d29dac3506154585f407660c2dbea7b5f70436157dc16341990"
                }
            },
            {
                "uri": "file:///nix/store/h2zp5pvdyc2d9rv97fgs1y20rbly70cm-bash-5.1-p16.drv",
                "digest": {
                    "sha256": "2a32dcb5fac84e74f5bb62a9e8f7698e9367fd00e3a2b8b82163309c2025c049"
                }
            },
            {
                "uri": "file:///nix/store/kgvj21apv851a2plkkwz282wyh0lq4ww-unzip-6.0.drv",
                "digest": {
                    "sha256": "91dde6ee7992a3a30816f32aa974fd1a47551b9901b71eb58cdd000112c58e7e"
                }
            },
            {
                "uri": "file:///nix/store/y1scbxhjd8ydivljdmv3087kz1jgmasy-curl-7.83.1.drv",
                "digest": {
                    "sha256": "773935e57450276be57b7103ae312b99c5696e90bec1d06a31bfb681e4909f76"
                }
            }
        ]
    }
}
